name: TurboGo Auto Release

on:
  push:
    branches:
      - main

jobs:
  auto-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PERSONAL_TOKEN }}

      - name: Set up Git
        run: |
          git config user.name "Dziqha"
          git config user.email "abdurrohmanhaadziq@gmail.ccom"

      - name: Get latest tag
        id: get_tag
        run: echo "tag=$(git describe --tags --abbrev=0 || echo 0.0.0)" >> $GITHUB_OUTPUT

      - name: Bump version
        id: bump
        run: echo "new_tag=v$(npx semver -i minor ${{ steps.get_tag.outputs.tag }})" >> $GITHUB_OUTPUT

      - name: Get commit type
        id: commit
        run: |
          TYPE=$(git log -1 --pretty=%s | sed -E 's/^([a-z]+):.*/\1/' | grep -E '^(feat|fix|chore|docs|refactor|ci|test)$' || echo "other")
          echo "type=$TYPE" >> $GITHUB_OUTPUT
      - name: Create tag and push
        run: |
          git tag ${{ steps.bump.outputs.new_tag }}
          git push origin ${{ steps.bump.outputs.new_tag }}

      - name: Generate CHANGELOG.md (for release body)
        id: changelog
        run: |
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          CURR_TAG=${{ steps.bump.outputs.new_tag }}
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "## ${CURR_TAG}" >> $GITHUB_OUTPUT
          if [ -n "$PREV_TAG" ]; then
            git log $PREV_TAG..HEAD --pretty=format:"- %s (%an)" >> $GITHUB_OUTPUT
          else
            git log --pretty=format:"- %s (%an)" >> $GITHUB_OUTPUT
          fi
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.PERSONAL_TOKEN }}
          tag_name: ${{ steps.bump.outputs.new_tag }}
          name: Release ${{ steps.bump.outputs.new_tag }}
          body: ${{ steps.changelog.outputs.changelog }}

      - name: Send Telegram Notification
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          VERSION: ${{ steps.bump.outputs.new_tag }}
          MESSAGE: ${{ steps.changelog.outputs.changelog }}
        run: |
          TEXT="üìÜ *TurboGo Released ${VERSION}*%0Aüîñ Type: ${{ steps.commit.outputs.type }}%0Aüìù Changelog:%0A${MESSAGE}"
          curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_TOKEN/sendMessage" \
            -d chat_id="$TELEGRAM_CHAT_ID" \
            -d parse_mode="Markdown" \
            -d text="$TEXT"
